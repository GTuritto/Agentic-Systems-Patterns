{
  "name": "agentic-systems-example",
  "version": "1.0.0",
  "type": "module",
  "scripts": {
    "single-agent": "ts-node --esm ./single-agent-pattern/autogen_typescript_example/single_agent.ts",
    "tool-using-agent": "ts-node --esm ./tool-using-agent-pattern/autogen_typescript_example/tool_using_agent.ts",
    "cot-agent": "ts-node --esm ./chain-of-thought-cot-pattern/autogen_typescript_example/cot_agent.ts",
    "react-agent": "ts-node --esm ./react-pattern-reason-act/autogen_typescript_example/react_agent.ts",
    "multi-agent-collab": "ts-node --esm ./multi-agent-collaboration-pattern/autogen_typescript_example/multi_agent_collab.ts",
    "task-delegation": "ts-node --esm ./task-delegation-pattern/autogen_typescript_example/task_delegation.ts",
    "agent-swarm": "ts-node --esm ./agent-swarm-pattern/autogen_typescript_example/agent_swarm.ts",
    "agent-chain": "ts-node --esm ./agent-chain-pipeline-pattern/autogen_typescript_example/agent_chain.ts",
    "agent-orchestration": "ts-node --esm ./agent-orchestration-pattern/autogen_typescript_example/agent_orchestration.ts",
    "agent-marketplace": "ts-node --esm ./agent-marketplace-pattern/autogen_typescript_example/agent_marketplace.ts",
    "recursive-agent": "ts-node --esm ./recursive-agent-pattern/autogen_typescript_example/recursive_agent.ts",
    "reflection-self-improvement-agent": "ts-node --esm ./reflection-and-self-improvement-pattern/autogen_typescript_example/reflection_agent.ts",
    "memory-augmented-agent": "ts-node --esm ./memory-augmented-agent-pattern/autogen_typescript_example/memory_agent.ts",
    "meta-cognitive-agent": "ts-node --esm ./meta-cognitive-agent-pattern/autogen_typescript_example/meta_cognitive_agent.ts",
    "goal-conditioned-agent": "ts-node --esm ./goal-conditioned-agent-pattern/autogen_typescript_example/goal_conditioned_agent.ts",
    "hierarchical-agent": "ts-node --esm ./hierarchical-agent-pattern/autogen_typescript_example/hierarchical_agent.ts",
    "planning-agent": "ts-node --esm ./planning-agent-pattern/autogen_typescript_example/planning_agent.ts",
    "environment-interactive-agent": "ts-node --esm ./environment-interactive-agent-pattern/autogen_typescript_example/environment_interactive_agent.ts",
    "distributed-agent": "ts-node --esm ./distributed-agent-pattern/autogen_typescript_example/distributed_agent.ts",
    "hybrid-agent": "ts-node --esm ./hybrid-agent-pattern/autogen_typescript_example/hybrid_agent.ts",
    "prompt-examples": "ts-node --esm ./prompt-engineering-pattern/autogen_typescript_example/prompt_examples.ts",
  "secure-agent": "ts-node --esm ./secure-agent-communication-pattern/autogen_typescript_example/secure_agent.ts",
  "mcp:server": "ts-node --esm ./mcp-context-exchange-pattern/typescript/src/mcp_server.ts",
  "mcp:client": "ts-node --esm ./mcp-context-exchange-pattern/typescript/src/mcp_client.ts",
  "a2a:run": "ts-node --esm ./agent-to-agent-communication-pattern/src/run_demo.ts",
    "a2a:test": "ts-node --esm ./agent-to-agent-communication-pattern/test/a2a.spec.ts",
    "plan:run": "ts-node --esm ./planning-pattern/typescript/src/run.ts",
    "plan:test": "ts-node --esm ./planning-pattern/typescript/test/planning.spec.ts",
    "codeact:ts": "ts-node --esm ./codeact-agent-pattern/typescript/src/codeact_agent.ts",
    "codeact:py": "python3 ./codeact-agent-pattern/python/codeact_agent.py",
    "plan:py": "python3 ./planning-pattern/python/run.py",
    "mcp:search": "ts-node --esm ./modern-tool-use-pattern/typescript/src/mcp_search_server.ts",
    "mcp:cloud": "ts-node --esm ./modern-tool-use-pattern/typescript/src/mcp_cloud_server.ts",
    "mcp:agent": "ts-node --esm ./modern-tool-use-pattern/typescript/src/agent.ts"
  },
  "dependencies": {
    "axios": "^1.6.0",
    "dotenv": "^16.0.0",
  "mathjs": "^13.0.0",
  "ajv": "^8.12.0",
  "express": "^4.18.2"
  },
  "devDependencies": {
  "@types/node": "^20.0.0",
  "@types/express": "^4.17.21",
    "ts-node": "^10.0.0",
    "typescript": "^5.0.0"
  }
}
